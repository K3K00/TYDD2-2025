// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/19/2025 14:27:00"

// 
// Device: Altera EP3C120F780C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module MultiplicadorSinSigno (
	p0,
	A0,
	B0,
	p1,
	A1,
	B1,
	p2,
	p3);
output 	p0;
input 	A0;
input 	B0;
output 	p1;
input 	A1;
input 	B1;
output 	p2;
output 	p3;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \p0~output_o ;
wire \p1~output_o ;
wire \p2~output_o ;
wire \p3~output_o ;
wire \A0~input_o ;
wire \B0~input_o ;
wire \inst~0_combout ;
wire \A1~input_o ;
wire \B1~input_o ;
wire \inst2|z~0_combout ;
wire \inst6|z~0_combout ;
wire \inst6|cout~0_combout ;


cycloneiii_io_obuf \p0~output (
	.i(\inst~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\p0~output_o ),
	.obar());
// synopsys translate_off
defparam \p0~output .bus_hold = "false";
defparam \p0~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \p1~output (
	.i(\inst2|z~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\p1~output_o ),
	.obar());
// synopsys translate_off
defparam \p1~output .bus_hold = "false";
defparam \p1~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \p2~output (
	.i(\inst6|z~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\p2~output_o ),
	.obar());
// synopsys translate_off
defparam \p2~output .bus_hold = "false";
defparam \p2~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \p3~output (
	.i(\inst6|cout~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\p3~output_o ),
	.obar());
// synopsys translate_off
defparam \p3~output .bus_hold = "false";
defparam \p3~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_ibuf \A0~input (
	.i(A0),
	.ibar(gnd),
	.o(\A0~input_o ));
// synopsys translate_off
defparam \A0~input .bus_hold = "false";
defparam \A0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_io_ibuf \B0~input (
	.i(B0),
	.ibar(gnd),
	.o(\B0~input_o ));
// synopsys translate_off
defparam \B0~input .bus_hold = "false";
defparam \B0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = (\A0~input_o  & \B0~input_o )

	.dataa(\A0~input_o ),
	.datab(\B0~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst~0 .lut_mask = 16'h8888;
defparam \inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_io_ibuf \A1~input (
	.i(A1),
	.ibar(gnd),
	.o(\A1~input_o ));
// synopsys translate_off
defparam \A1~input .bus_hold = "false";
defparam \A1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_io_ibuf \B1~input (
	.i(B1),
	.ibar(gnd),
	.o(\B1~input_o ));
// synopsys translate_off
defparam \B1~input .bus_hold = "false";
defparam \B1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_lcell_comb \inst2|z~0 (
// Equation(s):
// \inst2|z~0_combout  = (\A0~input_o  & (\B1~input_o  $ (((\B0~input_o  & \A1~input_o ))))) # (!\A0~input_o  & (\B0~input_o  & (\A1~input_o )))

	.dataa(\A0~input_o ),
	.datab(\B0~input_o ),
	.datac(\A1~input_o ),
	.datad(\B1~input_o ),
	.cin(gnd),
	.combout(\inst2|z~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|z~0 .lut_mask = 16'h6AC0;
defparam \inst2|z~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \inst6|z~0 (
// Equation(s):
// \inst6|z~0_combout  = (\A1~input_o  & (\B1~input_o  & ((!\B0~input_o ) # (!\A0~input_o ))))

	.dataa(\A1~input_o ),
	.datab(\B1~input_o ),
	.datac(\A0~input_o ),
	.datad(\B0~input_o ),
	.cin(gnd),
	.combout(\inst6|z~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst6|z~0 .lut_mask = 16'h0888;
defparam \inst6|z~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \inst6|cout~0 (
// Equation(s):
// \inst6|cout~0_combout  = (\A0~input_o  & (\B0~input_o  & (\A1~input_o  & \B1~input_o )))

	.dataa(\A0~input_o ),
	.datab(\B0~input_o ),
	.datac(\A1~input_o ),
	.datad(\B1~input_o ),
	.cin(gnd),
	.combout(\inst6|cout~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst6|cout~0 .lut_mask = 16'h8000;
defparam \inst6|cout~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign p0 = \p0~output_o ;

assign p1 = \p1~output_o ;

assign p2 = \p2~output_o ;

assign p3 = \p3~output_o ;

endmodule
