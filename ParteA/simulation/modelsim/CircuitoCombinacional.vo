// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/18/2025 17:51:34"

// 
// Device: Altera EP3C120F780C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module BloqueComb (
	z,
	a,
	b,
	cin,
	cout);
output 	z;
input 	a;
input 	b;
input 	cin;
output 	cout;

// Design Ports Information
// z	=>  Location: PIN_AG19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cout	=>  Location: PIN_AF19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_AC14,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_AD18,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cin	=>  Location: PIN_AG23,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \z~output_o ;
wire \cout~output_o ;
wire \a~input_o ;
wire \b~input_o ;
wire \cin~input_o ;
wire \inst1~0_combout ;
wire \inst5~0_combout ;


// Location: IOOBUF_X72_Y0_N9
cycloneiii_io_obuf \z~output (
	.i(\inst1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\z~output_o ),
	.obar());
// synopsys translate_off
defparam \z~output .bus_hold = "false";
defparam \z~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X83_Y0_N16
cycloneiii_io_obuf \cout~output (
	.i(\inst5~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X56_Y0_N22
cycloneiii_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X85_Y0_N8
cycloneiii_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X81_Y0_N22
cycloneiii_io_ibuf \cin~input (
	.i(cin),
	.ibar(gnd),
	.o(\cin~input_o ));
// synopsys translate_off
defparam \cin~input .bus_hold = "false";
defparam \cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X81_Y1_N24
cycloneiii_lcell_comb \inst1~0 (
// Equation(s):
// \inst1~0_combout  = \a~input_o  $ (\b~input_o  $ (\cin~input_o ))

	.dataa(\a~input_o ),
	.datab(\b~input_o ),
	.datac(\cin~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1~0 .lut_mask = 16'h9696;
defparam \inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X81_Y1_N2
cycloneiii_lcell_comb \inst5~0 (
// Equation(s):
// \inst5~0_combout  = (\a~input_o  & ((\b~input_o ) # (\cin~input_o ))) # (!\a~input_o  & (\b~input_o  & \cin~input_o ))

	.dataa(\a~input_o ),
	.datab(\b~input_o ),
	.datac(\cin~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst5~0 .lut_mask = 16'hE8E8;
defparam \inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign z = \z~output_o ;

assign cout = \cout~output_o ;

endmodule
